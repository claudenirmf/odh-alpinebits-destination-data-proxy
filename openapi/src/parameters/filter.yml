filter:
  name: filter
  in: query
  style: deepObject
  explode: true
  allowReserved: true
  description: >
    Filters resources in the endpoint given a field of the of the resource,
    an operation, and the desired value using the following syntax
    `filter["field"]["operand"]="value"`. The following operands are available:
      - `exists`: filters resources based on whether they have the desired
        field (e.g., `filter[description][exists]=true`). A `"field"` can be
        `"lastUpdate"`, an attribute, or a relationship of the resource. A
        `"value"` must be a boolean value.

      - `eq`: filters resources that have the selected field equal to the
        desired value (e.g., `filter[status][eq]=published`). A `"field"` can
        be any primitive type attribute. A `"value"` must be primitive JSON
        value matching the field's type.

      - `neq`: filters resources that have the selected field not equal to the
        desired value (e.g., `filter[status][neq]=published`). A `"field"` can
        be any primitive type attribute. A `"value"` must be primitive JSON
        value matching the field's type.

      - `gt`: filters resources that have the selected field greater than the
        desired value (e.g., `filter[lastUpdate][gt]=2022-04-01`). A `"field"` can
        be `"lastUpdate"` any primitive type attribute. A `"value"` must be primitive JSON
        value matching the field's type.

      - `gte`: filters resources that have the selected field  greater than or equal to the
        desired value (e.g., `filter[lastUpdate][gte]=2022-04-01`). A `"field"` can
        be `"lastUpdate"` any primitive type attribute. A `"value"` must be primitive JSON
        value matching the field's type.

      - `lt`: filters resources that have the selected field lower than the
        desired value (e.g., `filter[lastUpdate][lt]=2022-04-01`). A `"field"` can
        be `"lastUpdate"` any primitive type attribute. A `"value"` must be primitive JSON
        value matching the field's type.

      - `lte`: filters resources that have the selected field  lower than or equal to the
        desired value (e.g., `filter[lastUpdate][lte]=2022-04-01`). A `"field"` can
        be `"lastUpdate"` any primitive type attribute. A `"value"` must be primitive JSON
        value matching the field's type.

    Additionally, two special filters are available on ski slope collection.
    These can also be filtered based on their specific difficulties by using
    `"difficulty.eu"` or `"difficulty.us"` in place of `"field"` (e.g.,
    `filter[difficulty.us][eq]=beginner`).


    Notice that if you wish to use one of these examples in a request you must
    represent them as a JSON objects due to Swagger's supported serialization of
    objects in URLs:  `{ "lastUpdate": { "gt": "2022-04-01" } }`.
  schema:
    type: object
    additionalProperties:
        - type: object
    example: { "lastUpdate": { "gt": "2022-04-01" } }